# coding=utf-8
"""Tools used for solving the Day 1: Sonar Sweep puzzle."""


class SonarReport:
    """Define a sweep of depth measurements generated by the sub's sonar."""
    def __init__(self, measurements: list[int]):
        self._measurements = measurements

    @property
    def increments(self) -> int:
        """Compute the number of times the measured depth decreases."""
        increases = 0
        for i in range(1, len(self._measurements)):
            last = self._measurements[i - 1]
            new = self._measurements[i]
            if (new - last) > 0:
                increases += 1
        return increases

    @property
    def sliding_increments(self) -> int:
        """Compute the number of times the measured depth decreases."""
        values = self._measurements
        windows = []
        for i in range(len(values) - 2):
            windows.append(sum([values[i], values[i + 1],  values[i + 2]]))
        increases = 0
        for i in range(1, len(windows)):
            last = windows[i - 1]
            new = windows[i]
            if (new - last) > 0:
                increases += 1
        return increases
